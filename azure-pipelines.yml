# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

parameters:
  - name: theSteps
    type: stepList
    default:
    - checkout: self
      clean: false
      persistCredentials: true

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 3.1.25
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - bash: dotnet --list-runtmes
      displayName: 'Run a one-line script'

    - bash: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        #npm install
        uname -a
        echo $(System.AccessToken)
        git config -l
        cat .git/config
        cat /etc/issue
        #cat /proc/cpuinfo
        free
        node -v
        npm -v
        npx -v
        npx semantic-release -v
        npm ls -g
        npx semantic-release --no-ci
      displayName: 'Run a multi-line script'


    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          echo 'Hello world 2'
        failOnStderr: true
pool:
  name: p1
#  vmImage: ubuntu-latest

#container: node:17-bullseye
#container: node:17-bullseye-slim
#container: node:17-alpine
#container: furiozoga/semantic-release:0.0.1
#container: furiozoga/dotnetsdk:latest

jobs:
- job: azure_hosted
  pool:
    vmImage: ubuntu-latest
  steps: ${{ parameters.theSteps }}

- job: self_hosted
  dependsOn: azure_hosted
  condition: failed()
  pool:
    name: p1
  #container:
  #  image: furiozoga/dotnetsdk:latest
  #  mapDockerSocket: true
  steps: ${{ parameters.theSteps }}